import {Kelvin, KelvinPerSecond} from "../utils/unitTypes";
import {Component} from "./utils";

/**
 * http://www.projectrho.com/public_html/rocket/heatrad.php#dullred
 * Heat is radiated out based on this equation:
 * P = A * σ * T4
 * Where P is watts, A is the area of the radiator, σ is the constant below
 * and T4 is the temperature of the radiator raised to the fourth power
 *
 * This is untenable for the power we're dealing with, and very boring in a
 * sci-fi setting. Therefore, I'm adjusting the formula just a little bit.
 *
 * P = A * a * T5
 *
 * We can hand-wave the explanation as using some kind of warp field to
 * change the speed of light value used in the Stefan-Boltzmann constant
 *
 * We'll assume each heat radiator is 1 meter square
 *
 * We can also use this formula for converting heat into watts and vice versa
 *
 * (J / specific heat capacity) / mass (of the heated object)
 *
 * A few possible mediums for transferring heat, in J/gK:
 * - Ammonia Gas: 2.061
 * - Ammonia Liquid: 4.7
 * - Water Vapor: 1.865
 * - Water Liquid: 4.18
 * - Steel: .475
 * - Titanium: .52
 * - Aluminum: .904
 */

// https://en.wikipedia.org/wiki/Stefan–Boltzmann_constant
const StephanBoltzmannConstant = 5.670373 * 1e-8;

export class HeatComponent extends Component {
  static id = "heat" as const;

  /** The current heat value in Kelvin. Defaults to room temperature. */
  heat: Kelvin = 295.37;

  /**
   * The rate at which heat can transfer to or from coolant.
   * Heat generated by this entity isn't bound by this number
   */
  coolantHeatTransferRate: KelvinPerSecond = 10;

  /**
   * The effectiveness of transferring heat into space. A multiplier
   * for the equation P = A * a * T5
   */
  heatDissipationRate: number = 1;

  /**
   * The standard heat level. When plotted, this
   * represents the very bottom of the heat bar.
   */
  nominalHeat: Kelvin = 295.37;

  /**
   * The temperature at which this system starts experiencing
   * efficiency decreases due to overheating.
   */
  maxSafeHeat: Kelvin = 1000;

  /**
   * The maximum possible temperature. Represents the very top
   * of the heat bar graph.
   */
  maxHeat: Kelvin = 2500;
}
